{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/agb.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/page-select/page-select.component.css","webpack:///./src/app/page-select/page-select.component.html","webpack:///./src/app/page-select/page-select.component.ts","webpack:///./src/app/service-list/service-list.component.css","webpack:///./src/app/service-list/service-list.component.html","webpack:///./src/app/service-list/service-list.component.ts","webpack:///./src/app/topbar/topbar.component.css","webpack:///./src/app/topbar/topbar.component.html","webpack:///./src/app/topbar/topbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AgbService {\n\n  private url = 'assets/data/mock.json';\n\n  selectedServices: Array<number> = [];\n\n  constructor(private http:HttpClient) { }\n\n  loadData(): Observable<any> {\n    console.log('LOAD AGB');\n    return this.http.get(this.url);\n  }\n\n  getServices(): Observable<any> {\n    console.log('LOAD Service');\n    return this.loadData();\n  }\n\n  getSelectedServices() {\n    return this.selectedServices;\n  }\n\n  saveService(id): any {\n    console.log(this.selectedServices, id);\n    let index = this.selectedServices.indexOf(id);\n    if (index >= 0) {\n      return this.selectedServices.splice(index, 1)\n    } else {\n      return this.selectedServices.push(id);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageSelectComponent } from './page-select/page-select.component';\nimport { ServiceListComponent } from './service-list/service-list.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/select', pathMatch: 'full' },\n  { path: 'select', component: PageSelectComponent },\n  { path: 'services', component: ServiceListComponent }\n]\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1>Creepy AGB</h1>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { PageSelectComponent } from './page-select/page-select.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { ServiceListComponent } from './service-list/service-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageSelectComponent,\n    TopbarComponent,\n    ServiceListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"li {\\n  list-style: none;\\n  margin-bottom: 2em;\\n}\\n\\nli img {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\n.button {\\n  display: inline-block;\\n  font-size: 2em;\\n  background-color: blue;\\n  padding: .5em;\\n  border-radius: 4px;\\n  color: white;\\n}\\n\"","module.exports = \"<h2>Welche Dienste benutzt du?</h2>\\n<ul *ngIf=\\\"agb\\\">\\n<li *ngFor=\\\"let service of agb.services\\\">\\n  <label>\\n    <img src=\\\"/assets/images/{{service.name | lowercase}}_symbol.png\\\" width=\\\"100\\\">\\n    <input type=\\\"checkbox\\\" (click)=\\\"selectService(service.id)\\\">\\n    {{service.name}}\\n  </label>\\n</li>\\n</ul>\\n\\n<a routerLink=\\\"/services\\\" class=\\\"button\\\">weiter</a>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AgbService } from '../agb.service';\n\n@Component({\n  selector: 'app-page-select',\n  templateUrl: './page-select.component.html',\n  styleUrls: ['./page-select.component.css']\n})\nexport class PageSelectComponent implements OnInit {\n\n  agb: any;\n\n  constructor(private agbService: AgbService) { }\n\n  ngOnInit() {\n    this.getAgb();\n  }\n\n  getAgb() {\n    this.agbService.getServices()\n      .subscribe((data) => {\n        this.agb = data[0];\n      });\n  }\n\n\n  selectService(id) {\n    if (!id) { return; }\n    this.agbService.saveService(id);\n  }\n}\n","module.exports = \".button {\\n  display: inline-block;\\n  font-size: 2em;\\n  background-color: blue;\\n  padding: .5em;\\n  border-radius: 4px;\\n  color: white;\\n}\\n\\nimg {\\n  display: inline-block;\\n  vertical-align: middle;\\n}\\n\\nh2 {\\n  display: inline-block;\\n}\\n\\nli img {\\n  float: left;\\n  margin-right: 2em;\\n}\\n\\nli {\\n  clear: both;\\n  margin-bottom: 2em;\\n  list-style: none;\\n}\\n\\nli blockquote {\\n  background-color: lightgrey;\\n  padding: 0.2em;\\n}\\n\\nli blockquote:before {\\n  content: \\\">>\\\"\\n}\\n\\nli blockquote:after {\\n  content: \\\"<<\\\"\\n}\\n\\nli p {\\n  font-size: 1.5em;\\n}\\n\"","module.exports = \"<div *ngFor=\\\"let serv of agb.services\\\">\\n  <div *ngIf=\\\"services.indexOf(serv.id) >= 0\\\">\\n    <img src=\\\"/assets/images/{{serv.name | lowercase}}_symbol.png\\\" width=\\\"100\\\">\\n    <h2>{{serv.name}}</h2>\\n    <p><a href=\\\"{{serv.link}}\\\">Lies selbst!</a></p>\\n    <ul>\\n      <li>\\n        <img src=\\\"/assets/images/kontakte.jpg\\\">\\n        <h3>{{agb.categories.adressbuch}}</h3>\\n         <p>{{serv.adressbuch.answer}}</p>\\n        <blockquote>{{serv.adressbuch.quote}}</blockquote>\\n        <p>{{serv.adressbuch.add}}</p>\\n      </li>\\n      <li>\\n        <img src=\\\"/assets/images/standort.jpg\\\">\\n        <h3>{{agb.categories.standort}}</h3>\\n        <p>{{serv.standort.answer}}</p>\\n        <blockquote>{{serv.standort.quote}}</blockquote>\\n        <p>{{serv.standort.add}}</p>\\n      </li>\\n      <li>\\n        <img src=\\\"/assets/images/verhalten.jpg\\\">\\n        <h3>{{agb.categories.nutzungsverhalten}}</h3>\\n        <p>{{serv.nutzungzverhalten.answer}}</p>\\n        <blockquote>{{serv.nutzungzverhalten.quote}}</blockquote>\\n        <p>{{serv.nutzungzverhalten.add}}</p>\\n      </li>\\n      <li>\\n        <img src=\\\"/assets/images/drittanbieter.jpg\\\">\\n        <h3>{{agb.categories.drittanbieter}}</h3>\\n        <p>{{serv.drittanbieter.answer}}</p>\\n        <blockquote>{{serv.drittanbieter.quote}}</blockquote>\\n        <p>{{serv.drittanbieter.add}}</p>\\n      </li>\\n      <li>\\n        <img src=\\\"/assets/images/inhalte.jpg\\\">\\n        <h3>{{agb.categories.content}}</h3>\\n        <p>{{serv.content.answer}}</p>\\n        <blockquote>{{serv.content.quote}}</blockquote>\\n        <p>{{serv.content.add}}</p>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div style=\\\"clear: both; margin-bottom: 3em;\\\">\\n  <a routerLink=\\\"/select\\\" class=\\\"button\\\">zurück</a>\\n</div>\\n\\n<hr>\\n<h1>Unser Creepy Score</h1>\\n<iframe src=\\\"//datawrapper.dwcdn.net/1VQsy/1/\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\" allowtransparency=\\\"true\\\" width=\\\"748\\\" height=\\\"400\\\"></iframe>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AgbService } from '../agb.service';\n\n@Component({\n  selector: 'app-service-list',\n  templateUrl: './service-list.component.html',\n  styleUrls: ['./service-list.component.css']\n})\nexport class ServiceListComponent implements OnInit {\n\n  services: any;\n  agb: any;\n\n  constructor(private agbService: AgbService) { }\n\n  ngOnInit() {\n    this.getAgb();\n    this.getServices();\n  }\n\n  getServices() {\n    this.services = this.agbService.getSelectedServices();\n  }\n\n  getAgb() {\n    this.agbService.getServices()\n      .subscribe((data) => {\n        this.agb = data[0];\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  topbar works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css']\n})\nexport class TopbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}